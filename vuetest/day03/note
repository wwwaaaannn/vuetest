beforeDestroy



mounted

updated
更新后
beforeDestroy
销毁前
Destroy


指令
    v-bind 
        绑定属性
        v-bind:class=''
              :class=''
        
        :title
        :url='"http://"+url'

    v-html
        数据渲染
        可以识别标签
    v-text
        数据渲染
        不可以识别标签，会把标签当做普通文本进行显示
    v-if
        条件判断，是否显示某个节点
        如果v-if的值是false,当前的节点不会加载到dom数中
        v-if='',可以简单的逻辑运算
    v-else
        只有当v-if不满足条件，才会执行v-else
    v-else-if='条件判断'
        
    v-show
        条件判断，是否显示某个节点
        如果v-if的值是false，节点不会显示在页面中，会加载到dom数中
        display：none；

    v-for
        循环遍历
        v-for当取值：
            数组：v-for='(item,index)in arr'
                        item是值 index是索引
            对象：v-for='(value,name,index)in obj'
        
    v-on
        绑定事件
        v-on：事件类型
        简写：@click

        修饰符
            @click.stop
            @click.once

:class
    类
    :class='[,,,]'
:style
    行内样式
    :style='obj'
    
    data:{
        obj:{
            color:'red';
            fontSize必须使用驼峰命名法


        }

    }

表单
    双向数据绑定
    userform是对象
<form v-model='userform'>
    <input type='text' v-model='userform.username'/>
    <input type='redio' v-model='userform.username'/>
    <input type='text' v-model='userform.username'/>
    hobby必须为数组
    <input type='checkbox' v-model='userform.hobby'/>
    <input type='checkbox' v-model='userform.hobby'/>
    <input type='checkbox' v-model='userform.hobby'/>
    
</form>


计算属性

    computed
        一般指的是对data中原有的数据进行计算后返回结果,可以当作属性来使用
        只有当计算属性依赖发生改变,那么计算属性才会重新执行

监听属性
        input  change事件
            data:{
                msg:'',
                form:{}
            }
        监听,如果msg的值发生改变,那么触发监听
        watch:{
            msg:function(new,old){

            },
            form:{
                handler:function(new,old){

                },
                深度监听
                deep:true
            }
     }

组件
    先了解
    组件库
    按钮    复用
    
